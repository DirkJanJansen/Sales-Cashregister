All commands keyboard Ctrl+Alt+t to open terminal
Installation software:
Python 3 is already installed in Ubuntu 19.04 and newer

Installation with Virtual Python Environment to avoid conflicts:
requirement for installing virtual environment:
sudo apt install python3-pip
sudo apt install python3-venv
and requirement installing psycopg2 :
sudo apt install python3-dev
Create a virtual environment with:
python3 -m venv $HOME/venv
Activate Virtual environment with:
source venv/bin/activate
In terminal (venv)$:
python -m pip install --upgrade pip
pip install pyqt5
pip install pyqtchart
pip install pillow
pip install python-barcode
pip install psycopg2
pip install sqlalchemy==1.4.0
pip install argon2-cffi
pip install keyboard

if you want a editor install PyCharm community:
Install:
sudo snap install pycharm-community --classic
Point Pycharm to existing Virtual Environment (Interpreter Python settings)

Install postgresql:
in terminal
sudo apt update -y
sudo apt install gnupg2 wget vim -y
sudo sh -c 'echo "deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
sudo apt update -y
sudo apt install postgresql-16 postgresql-contrib-16
sudo systemctl start postgresql
sudo systemctl enable postgresql
psql
in psql set password with \password (postgres45)

if you want get rid of the annoying i386 error with sudo apt update
change:
sudo nano /etc/apt/sources.list.d/pgdg.list
change "deb http://apt.postgresql.org/pub/repos/apt jammy-pgdg main" in:
deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt jammy-pgdg main
and save with ctrl+o exit ctrl+x

Install pgadmin4:
curl -fsS https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo gpg --dearmor -o /usr/share/keyrings/packages-pgadmin-org.gpg
sudo sh -c 'echo "deb [signed-by=/usr/share/keyrings/packages-pgadmin-org.gpg] https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'
sudo apt install pgadmin4

Printer settings in linux for printing listings:
Retrieve printer_name on Linux terminal:
lpstat -p -d 
set default printer with:
lpoptions -d <printer_name>
set fonts and margins for printing (A4) with:
lpoptions -o page-left=18 -o page-right=0 -o page-top=25 -o page-bottom=80 -o cpi=13 -o lpi=6
Follow these settings exactly for printlists with more pages

Barcode enabling in linux: (if your barcodescanner stops working by thirst scan like mine)

The solution for enabling the barcodereader is changed for it's not working anymore for Ubuntu 20.04
I changed as follows.
Copy file .usbkbd.sh from folder installation in folder /home/postgres ($HOME)
chmod 755 .usbkbd.sh
If the password changed for Ubuntu from postgres45 change it too in .usbkbd.sh
Thats all. The script is called with starting Sales.py and the barcodescanner works again.

Enable error sounds in linux terminal:
sudo apt install sox

For Return adding by buttons in Linux install:
sudo apt install xdotool

Installing database:
createdb cashregister
restore database:
pg_restore --dbname=cashregister  --verbose "/home/postgres/Sales/Installation/cashregister.backup"
for restricted database installation see section restore database
Copy Sales with folder structures in /home/postgres so you get /home/postgres/Sales

The fonts in Linux differ from Windows. (Install Arial, Comic Sans MS, Times, Sans Serif and Consolas)
https://www.ostechnix.com/install-microsoft-windows-fonts-ubuntu-16-04/
Or copy fonts from Windows/Fonts in dir .local/share/fonts
in terminal sudo fc-cache -r -f
install Ubuntu tweak tools and increase font  size with 20%  for optimal views
   
startup files in Linux:
Copy register.png from folder Installation in folder /home/postgres/.icons
Copy Sales.desktop from folder Installation in /home/postgres/.local/share/applications

All settings that differ from executing in Windows are automatically adjusted for Ubuntu

By problems reading importfiles from windows, copy these lines in Linux plain text, because windows adds control characters.

To compile Sales.py script in Python:
Open Terminal Ctrl+Alt+t

cd Sales
python3 -m compileall ./

Database backup and restore from terminal

commands in terminal Ctrl+Alt+t

backup database:
pg_dump -v --verbose -d  cashregister -Fc -f  "/home/postgres/Sales/Installation/cashregister.backup"

delete database:
dropdb cashregister

create empty database:
createdb cashregister

restore database:
pg_restore --dbname=cashregister  --verbose "/home/postgres/Sales/Installation/cashregister.backup"
Or for empty database (Only functional data):
pg_restore --dbname=cashregister  --verbose "/home/postgres/Sales/Installation/cashregister_empty.backup"

