Installation software:

Python 3 is already installed in Ubuntu above version 18

sudo apt install python3-pip
sudo pip3 install pyqt5
sudo pip3 install python-barcode
sudo pip3 install pillow

If you want a editor install PyCharm community
in terminal Crtr+alt+t:
sudo snap install pycharm-community --classic

sqlalchemy  version 1.4.46 or before and psycopg2 is installed with postgreSQL-contrib see next lines

Installation Sales as user postgres with password postgres45:
Copy .pgpass in /home/postgres  
in terminal chmod 600 .pgpass
for installation postgresql follow steps in:
https://tecadmin.net/install-postgresql-server-on-ubuntu/
additional set password in psql with \password   (postgres45)
Install pgadmin4 follow steps in:
https://tecadmin.net/install-pgadmin4-on-ubuntu/
install pgadmin other then described with:
sudo apt-get install pgadmin4 (without apache)

Printer settings in linux for printing listings:
Retrieve printer_name on Linux terminal:
lpstat -p -d 
set default printer with:
lpoptions -d <printer_name>
set fonts and margins for printing (A4) with:
lpoptions -o page-left=18 -o page-right=0 -o page-top=25 -o page-bottom=80 -o cpi=13 -o lpi=6
Follow these settings exactly for printlists with more pages

Barcode enabling in linux: (if your barcodescanner stops working by thirst scan like mine)

The solution for enabling the barcodereader is changed for it's not working anymore for Ubuntu 20.04
I changed as follows.
Copy file .usbkbd.sh from folder installation in folder /home/postgres ($HOME)
chmod 755 .usbkbd.sh
If the password changed for Ubuntu from postgres45 change it too in .usbkbd.sh
Thats all. The script is called with starting Sales.py and the barcodescanner works again.

Enable error sounds in linux terminal:
sudo apt install sox

For Return adding by buttons in Linux install:
sudo apt install xdotool

Installing database:
In pgadmin4 tree create a server LocalHost and a empty database:  cashregister, right click databases (login with postgres45) 
set password in pgadmin4: postgres45 with making tree cashregister
In tree pgadmin4 Localhost-Databases-cashregister restore from cashregister.backup, right click cashregister and browse to cashregister.backup 
Or install database from terminal see last section in this document!
Copy Sales with folder structures in /home/postgres so you get /home/postgres/Sales

The fonts in Linux differ from Windows. (Install Arial, Comic Sans MS, Times, Sans Serif and Consolas)
https://www.ostechnix.com/install-microsoft-windows-fonts-ubuntu-16-04/
Or copy fonts from Windows/Fonts in dir .local/share/fonts
in terminal sudo fc-cache -r -f
install Ubuntu tweak tools and increase font  size for optimal views
   
startup files in Linux:
Copy register.png from folder Installation in folder /home/postgres/.icons
Copy Sales.desktop from folder Installation in /home/postgres/.local/share/applications

All settings that differ from executing in Windows are automatically adjusted for Ubuntu

By problems reading importfiles from windows, copy these lines in Linux plain text, because windows adds control characters.

To compile Sales.py script in Python:
Open Terminal Ctrl+Alt+t

cd Sales
python3 -m compileall ./

Database backup and restore from terminal

commands in terminal Ctrl+Alt+t

backup database:
pg_dump -v --verbose -d  cashregister -Fc -f  "/home/postgres/Sales/Installation/cashregister.backup"

delete database:
dropdb cashregister

create empty database:
createdb cashregister

restore database:
pg_restore --dbname=cashregister  --verbose "/home/postgres/Sales/Installation/cashregister.backup"
Or for empty database (Only functional data):
pg_restore --dbname=cashregister  --verbose "/home/postgres/Sales/Installation/cashregister_empty.backup"

Before starting the program for the first time run script reset_odd_even.py to set the parameter for odd-even year for the right year
Ctrl+Alt+t (opens terminal)
in terminal following commands:
cd Sales
python3 reset_odd_even.py

